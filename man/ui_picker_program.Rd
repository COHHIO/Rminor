% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_ui.R
\name{ui_picker_program}
\alias{ui_picker_program}
\title{A pickerInput that provides active programs to select from}
\usage{
ui_picker_program(
  label = "Select Program",
  inputId = rlang::caller_env()$ns("program"),
  choices = programs,
  selected = NULL,
  multiple = TRUE,
  options = shinyWidgets::pickerOptions(liveSearch = TRUE, liveSearchStyle =
    "contains"),
  ...,
  add_options
)
}
\arguments{
\item{label}{Display label for the control, or \code{NULL} for no label.}

\item{inputId}{\code{(character)} Automatically namespace with ID `'project'` if non specified.}

\item{choices}{List of values to select from. If elements of the
list are named then that name rather than the value is displayed to the user.}

\item{selected}{The initially selected value (or multiple values if \code{multiple = TRUE}).
If not specified then defaults to the first value for single-select lists
and no values for multiple select lists.}

\item{multiple}{Is selection of multiple items allowed?}

\item{options}{List of options, see \link[shinyWidgets]{pickerOptions} for all available options.
To limit the number of selection possible, see example below.}

\item{...}{
  Arguments passed on to \code{\link[shinyWidgets:pickerInput]{shinyWidgets::pickerInput}}
  \describe{
    \item{\code{choicesOpt}}{Options for choices in the dropdown menu.}
    \item{\code{width}}{The width of the input : 'auto', 'fit', '100px', '75\%'.}
    \item{\code{inline}}{Display picker inline, to have label and menu on same line use \code{width = "fit"}.}
  }}

\item{add_options}{\code{(list)} of options to add to existing defaults}
}
\value{
A select control that can be added to a UI definition.
}
\description{
A pickerInput that provides active programs to select from
}
